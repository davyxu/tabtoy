// Code generated by protoc-gen-go.
// source: test.proto
// DO NOT EDIT!

/*
Package test is a generated protocol buffer package.

It is generated from these files:
	test.proto

It has these top-level messages:
	Prop
	ActorDefine
	ActorFile
*/
package test

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ActorType int32

const (
	ActorType_Fighter ActorType = 0
	ActorType_Power   ActorType = 21
)

var ActorType_name = map[int32]string{
	0:  "Fighter",
	21: "Power",
}
var ActorType_value = map[string]int32{
	"Fighter": 0,
	"Power":   21,
}

func (x ActorType) String() string {
	return proto.EnumName(ActorType_name, int32(x))
}
func (ActorType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Prop struct {
	HP         int32     `protobuf:"varint,1,opt,name=HP,json=hP" json:"HP,omitempty"`
	AttackRate float32   `protobuf:"fixed32,2,opt,name=AttackRate,json=attackRate" json:"AttackRate,omitempty"`
	ExType     ActorType `protobuf:"varint,3,opt,name=ExType,json=exType,enum=test.ActorType" json:"ExType,omitempty"`
}

func (m *Prop) Reset()                    { *m = Prop{} }
func (m *Prop) String() string            { return proto.CompactTextString(m) }
func (*Prop) ProtoMessage()               {}
func (*Prop) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// 代表每一行对应的整个字段描述
type ActorDefine struct {
	// 唯一ID
	ID int64 `protobuf:"varint,1,opt,name=ID,json=iD" json:"ID,omitempty"`
	// 角色名称
	Name   string  `protobuf:"bytes,5,opt,name=Name,json=name" json:"Name,omitempty"`
	Struct *Prop   `protobuf:"bytes,10,opt,name=Struct,json=struct" json:"Struct,omitempty"`
	BuffID []int32 `protobuf:"varint,20,rep,packed,name=BuffID,json=buffID" json:"BuffID,omitempty"`
	// 角色类型
	Type      ActorType `protobuf:"varint,30,opt,name=Type,json=type,enum=test.ActorType" json:"Type,omitempty"`
	SkillID   []int32   `protobuf:"varint,40,rep,packed,name=SkillID,json=skillID" json:"SkillID,omitempty"`
	StrStruct []*Prop   `protobuf:"bytes,50,rep,name=StrStruct,json=strStruct" json:"StrStruct,omitempty"`
}

func (m *ActorDefine) Reset()                    { *m = ActorDefine{} }
func (m *ActorDefine) String() string            { return proto.CompactTextString(m) }
func (*ActorDefine) ProtoMessage()               {}
func (*ActorDefine) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ActorDefine) GetStruct() *Prop {
	if m != nil {
		return m.Struct
	}
	return nil
}

func (m *ActorDefine) GetStrStruct() []*Prop {
	if m != nil {
		return m.StrStruct
	}
	return nil
}

// 代表导出文件
type ActorFile struct {
	Actor []*ActorDefine `protobuf:"bytes,1,rep,name=Actor,json=actor" json:"Actor,omitempty"`
}

func (m *ActorFile) Reset()                    { *m = ActorFile{} }
func (m *ActorFile) String() string            { return proto.CompactTextString(m) }
func (*ActorFile) ProtoMessage()               {}
func (*ActorFile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ActorFile) GetActor() []*ActorDefine {
	if m != nil {
		return m.Actor
	}
	return nil
}

func init() {
	proto.RegisterType((*Prop)(nil), "test.Prop")
	proto.RegisterType((*ActorDefine)(nil), "test.ActorDefine")
	proto.RegisterType((*ActorFile)(nil), "test.ActorFile")
	proto.RegisterEnum("test.ActorType", ActorType_name, ActorType_value)
}

func init() { proto.RegisterFile("test.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 304 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x51, 0xcb, 0x4a, 0x03, 0x31,
	0x14, 0x35, 0xf3, 0x48, 0x99, 0x5b, 0xa8, 0xf5, 0xa2, 0x92, 0x55, 0x09, 0xd3, 0x85, 0xc1, 0x45,
	0x17, 0xd5, 0x1f, 0xa8, 0x8c, 0xc5, 0x6e, 0x64, 0x48, 0xdd, 0xcb, 0xb4, 0xa4, 0x76, 0xe8, 0x63,
	0x86, 0x4c, 0x8a, 0xf6, 0x47, 0xfd, 0x1e, 0xc9, 0x9d, 0x2a, 0x22, 0xee, 0x72, 0xce, 0xe1, 0x3c,
	0x92, 0x00, 0x38, 0xd3, 0xb8, 0x51, 0x6d, 0x2b, 0x57, 0x61, 0xe4, 0xcf, 0xe9, 0x2b, 0x44, 0xb9,
	0xad, 0x6a, 0xec, 0x41, 0xf0, 0x94, 0x0b, 0x26, 0x99, 0x8a, 0x75, 0xb0, 0xce, 0x71, 0x00, 0x30,
	0x71, 0xae, 0x58, 0x6e, 0x74, 0xe1, 0x8c, 0x08, 0x24, 0x53, 0x81, 0x86, 0xe2, 0x87, 0xc1, 0x1b,
	0xe0, 0x8f, 0x1f, 0x2f, 0xc7, 0xda, 0x88, 0x50, 0x32, 0xd5, 0x1b, 0x9f, 0x8f, 0x28, 0x7a, 0xb2,
	0x74, 0x95, 0xf5, 0xb4, 0xe6, 0x86, 0xe4, 0xf4, 0x93, 0x41, 0x97, 0xd8, 0xcc, 0xac, 0xca, 0xbd,
	0xf1, 0x45, 0xb3, 0x8c, 0x8a, 0x42, 0x1d, 0x94, 0x19, 0x22, 0x44, 0xcf, 0xc5, 0xce, 0x88, 0x58,
	0x32, 0x95, 0xe8, 0x68, 0x5f, 0xec, 0x0c, 0xa6, 0xc0, 0xe7, 0xce, 0x1e, 0x96, 0x4e, 0x80, 0x64,
	0xaa, 0x3b, 0x86, 0x36, 0xdc, 0x0f, 0xd5, 0xbc, 0x21, 0x05, 0xaf, 0x81, 0x3f, 0x1c, 0x56, 0xab,
	0x59, 0x26, 0x2e, 0x65, 0xa8, 0x62, 0xcd, 0x17, 0x84, 0x70, 0x08, 0x11, 0xcd, 0x1a, 0xfc, 0x3f,
	0x2b, 0x72, 0xc7, 0xda, 0xa0, 0x80, 0xce, 0x7c, 0x53, 0x6e, 0xb7, 0xb3, 0x4c, 0x28, 0x72, 0x77,
	0x9a, 0x16, 0xa2, 0x82, 0x64, 0xee, 0xec, 0xa9, 0x7d, 0x2c, 0xc3, 0x3f, 0xed, 0x49, 0xf3, 0x2d,
	0xa6, 0xf7, 0x90, 0x50, 0xec, 0xb4, 0xdc, 0xfa, 0xe7, 0x88, 0x09, 0x08, 0x46, 0x96, 0x8b, 0x5f,
	0xb5, 0xed, 0xbd, 0x75, 0x5c, 0x78, 0x70, 0x3b, 0x3c, 0xb9, 0xfc, 0x18, 0xec, 0x42, 0x67, 0x5a,
	0xbe, 0xad, 0x9d, 0xb1, 0xfd, 0x33, 0x4c, 0x20, 0xce, 0xab, 0x77, 0x63, 0xfb, 0x57, 0x0b, 0x4e,
	0x3f, 0x74, 0xf7, 0x15, 0x00, 0x00, 0xff, 0xff, 0xcd, 0x7a, 0x2b, 0xaa, 0xaf, 0x01, 0x00, 0x00,
}
